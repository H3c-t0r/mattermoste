// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`admin_console/team_channel_settings/team/TeamProfile should match snapshot (not cloud, freemium disabled 1`] = `
<ContextProvider
  value={
    Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "subscription": Subscription {
        "handleChangeWrapper": [Function],
        "listeners": Object {
          "notify": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": null,
      },
    }
  }
>
  <TeamProfile
    isArchived={false}
    onToggleArchive={[MockFunction]}
    team={
      Object {
        "allow_open_invite": false,
        "allowed_domains": "",
        "company_name": "",
        "create_at": 0,
        "delete_at": 0,
        "description": "",
        "display_name": "name",
        "email": "",
        "group_constrained": false,
        "id": "team_id",
        "invite_id": "",
        "name": "DN",
        "scheme_id": "id",
        "type": "O",
        "update_at": 0,
      }
    }
  />
</ContextProvider>
`;

exports[`admin_console/team_channel_settings/team/TeamProfile should match snapshot with isArchived true 1`] = `
<ContextProvider
  value={
    Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "subscription": Subscription {
        "handleChangeWrapper": [Function],
        "listeners": Object {
          "notify": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": null,
      },
    }
  }
>
  <TeamProfile
    isArchived={true}
    onToggleArchive={[MockFunction]}
    team={
      Object {
        "allow_open_invite": false,
        "allowed_domains": "",
        "company_name": "",
        "create_at": 0,
        "delete_at": 0,
        "description": "",
        "display_name": "name",
        "email": "",
        "group_constrained": false,
        "id": "team_id",
        "invite_id": "",
        "name": "DN",
        "scheme_id": "id",
        "type": "O",
        "update_at": 0,
      }
    }
  />
</ContextProvider>
`;
