// Code generated by mockery v1.0.0. DO NOT EDIT.

// Regenerate this file using `make store-mocks`.

package mocks

import mock "github.com/stretchr/testify/mock"
import model "github.com/mattermost/mattermost-server/model"
import store "github.com/mattermost/mattermost-server/store"

// RemindStore is an autogenerated mock type for the RemindStore type
type RemindStore struct {
	mock.Mock
}

// DeleteByReminder provides a mock function with given fields: reminderId
func (_m *RemindStore) DeleteByReminder(reminderId string) store.StoreChannel {
	ret := _m.Called(reminderId)

	var r0 store.StoreChannel
	if rf, ok := ret.Get(0).(func(string) store.StoreChannel); ok {
		r0 = rf(reminderId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(store.StoreChannel)
		}
	}

	return r0
}

// DeleteForUser provides a mock function with given fields: userId
func (_m *RemindStore) DeleteForUser(userId string) store.StoreChannel {
	ret := _m.Called(userId)

	var r0 store.StoreChannel
	if rf, ok := ret.Get(0).(func(string) store.StoreChannel); ok {
		r0 = rf(userId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(store.StoreChannel)
		}
	}

	return r0
}

// GetByReminder provides a mock function with given fields: reminderId
func (_m *RemindStore) GetByReminder(reminderId string) store.StoreChannel {
	ret := _m.Called(reminderId)

	var r0 store.StoreChannel
	if rf, ok := ret.Get(0).(func(string) store.StoreChannel); ok {
		r0 = rf(reminderId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(store.StoreChannel)
		}
	}

	return r0
}

// GetByTime provides a mock function with given fields: time
func (_m *RemindStore) GetByTime(time string) store.StoreChannel {
	ret := _m.Called(time)

	var r0 store.StoreChannel
	if rf, ok := ret.Get(0).(func(string) store.StoreChannel); ok {
		r0 = rf(time)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(store.StoreChannel)
		}
	}

	return r0
}

// GetByUser provides a mock function with given fields: userId
func (_m *RemindStore) GetByUser(userId string) store.StoreChannel {
	ret := _m.Called(userId)

	var r0 store.StoreChannel
	if rf, ok := ret.Get(0).(func(string) store.StoreChannel); ok {
		r0 = rf(userId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(store.StoreChannel)
		}
	}

	return r0
}

// GetReminder provides a mock function with given fields: reminderId
func (_m *RemindStore) GetReminder(reminderId string) store.StoreChannel {
	ret := _m.Called(reminderId)

	var r0 store.StoreChannel
	if rf, ok := ret.Get(0).(func(string) store.StoreChannel); ok {
		r0 = rf(reminderId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(store.StoreChannel)
		}
	}

	return r0
}

// SaveOccurrence provides a mock function with given fields: occurrence
func (_m *RemindStore) SaveOccurrence(occurrence *model.Occurrence) store.StoreChannel {
	ret := _m.Called(occurrence)

	var r0 store.StoreChannel
	if rf, ok := ret.Get(0).(func(*model.Occurrence) store.StoreChannel); ok {
		r0 = rf(occurrence)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(store.StoreChannel)
		}
	}

	return r0
}

// SaveReminder provides a mock function with given fields: reminder
func (_m *RemindStore) SaveReminder(reminder *model.Reminder) store.StoreChannel {
	ret := _m.Called(reminder)

	var r0 store.StoreChannel
	if rf, ok := ret.Get(0).(func(*model.Reminder) store.StoreChannel); ok {
		r0 = rf(reminder)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(store.StoreChannel)
		}
	}

	return r0
}
