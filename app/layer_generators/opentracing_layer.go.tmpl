// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.
// See LICENSE.txt for license information.

// Code generated by "make store-layers"
// DO NOT EDIT

package app

import (
	"archive/zip"
	"bytes"
	"context"
	"crypto/ecdsa"
	"html/template"
	"io"
	"mime/multipart"
	"net/http"
	"net/url"
	"time"

	"github.com/dyatlov/go-opengraph/opengraph"
	"github.com/gorilla/websocket"
	"github.com/mattermost/mattermost-server/v5/mlog"
	"github.com/mattermost/mattermost-server/v5/plugin"
	"github.com/mattermost/mattermost-server/v5/utils"

	goi18n "github.com/mattermost/go-i18n/i18n"
	"github.com/mattermost/mattermost-server/v5/einterfaces"

	"github.com/mattermost/mattermost-server/v5/model"

	"github.com/mattermost/mattermost-server/v5/services/filesstore"
	"github.com/mattermost/mattermost-server/v5/services/httpservice"
	"github.com/mattermost/mattermost-server/v5/services/imageproxy"
	"github.com/mattermost/mattermost-server/v5/services/timezones"
	"github.com/mattermost/mattermost-server/v5/services/tracing"
	"github.com/mattermost/mattermost-server/v5/store"

)

type {{.Name}} struct {
	app AppIface

		srv *Server

	log              *mlog.Logger
	notificationsLog *mlog.Logger

	t              goi18n.TranslateFunc
	session        model.Session
	requestId      string
	ipAddress      string
	path           string
	userAgent      string
	acceptLanguage string

	accountMigration einterfaces.AccountMigrationInterface
	cluster          einterfaces.ClusterInterface
	compliance       einterfaces.ComplianceInterface
	dataRetention    einterfaces.DataRetentionInterface
	elasticsearch    einterfaces.ElasticsearchInterface
	ldap             einterfaces.LdapInterface
	messageExport    einterfaces.MessageExportInterface
	metrics          einterfaces.MetricsInterface
	notification     einterfaces.NotificationInterface
	saml             einterfaces.SamlInterface

	httpService httpservice.HTTPService
	imageProxy  *imageproxy.ImageProxy
	timezones   *timezones.Timezones

	context context.Context
	store   store.Store


	ctx context.Context
}


{{range $index, $element := .Methods}}
func (s *{{$.Name}}) {{$index}}({{$element.Params | joinParamsWithType}}) {{$element.Results | joinResultsForSignature}} {
	span, _ := tracing.StartSpanWithParentByContext(s.ctx, "app.{{$index}}")
	{{range $paramName, $param := $element.Params}}
	span.SetTag("{{$param.Name}}", {{$param.Name}})
	{{end}}
	defer span.Finish()

	{{if $element.Results | len | eq 0}}s.app.{{$index}}({{$element.Params | joinParams}})
	{{ else }}return s.app.{{$index}}({{$element.Params | joinParams}})
	{{ end}}}
{{end}}

func NewOpenTracingAppLayer(childApp AppIface, ctx context.Context) *{{.Name}} {
	newStore := {{.Name}}{
		app: childApp,
		ctx: ctx,
	}
	return &newStore
}


func (s *{{.Name}}) Srv() *Server {
	return a.srv
}
func (s *{{.Name}}) Log() *mlog.Logger {
	return a.log
}
func (s *{{.Name}}) NotificationsLog() *mlog.Logger {
	return a.notificationsLog
}
func (s *{{.Name}}) T(translationID string, args ...interface{}) string {
	return a.t(translationID, args...)
}
func (s *{{.Name}}) Session() *model.Session {
	return &a.session
}
func (s *{{.Name}}) RequestId() string {
	return a.requestId
}
func (s *{{.Name}}) IpAddress() string {
	return a.ipAddress
}
func (s *{{.Name}}) Path() string {
	return a.path
}
func (s *{{.Name}}) UserAgent() string {
	return a.userAgent
}
func (s *{{.Name}}) AcceptLanguage() string {
	return a.acceptLanguage
}
func (s *{{.Name}}) AccountMigration() einterfaces.AccountMigrationInterface {
	return a.accountMigration
}
func (s *{{.Name}}) Cluster() einterfaces.ClusterInterface {
	return a.cluster
}
func (s *{{.Name}}) Compliance() einterfaces.ComplianceInterface {
	return a.compliance
}
func (s *{{.Name}}) DataRetention() einterfaces.DataRetentionInterface {
	return a.dataRetention
}
func (s *{{.Name}}) Elasticsearch() einterfaces.ElasticsearchInterface {
	return a.elasticsearch
}
func (s *{{.Name}}) Ldap() einterfaces.LdapInterface {
	return a.ldap
}
func (s *{{.Name}}) MessageExport() einterfaces.MessageExportInterface {
	return a.messageExport
}
func (s *{{.Name}}) Metrics() einterfaces.MetricsInterface {
	return a.metrics
}
func (s *{{.Name}}) Notification() einterfaces.NotificationInterface {
	return a.notification
}
func (s *{{.Name}}) Saml() einterfaces.SamlInterface {
	return a.saml
}
func (s *{{.Name}}) HTTPService() httpservice.HTTPService {
	return a.httpService
}
func (s *{{.Name}}) ImageProxy() *imageproxy.ImageProxy {
	return a.imageProxy
}
func (s *{{.Name}}) Timezones() *timezones.Timezones {
	return a.timezones
}
func (s *{{.Name}}) Context() context.Context {
	return a.context
}
func (s *{{.Name}}) Store() store.Store {
	return a.store
}

func (s *{{.Name}}) SetSession(s *model.Session) {
	a.session = *s
}
func (s *{{.Name}}) SetStore(s store.Store) {
	a.store = s
}

func (s *{{.Name}}) SetT(t goi18n.TranslateFunc){
	a.t = t
}
func (s *{{.Name}}) SetRequestId(s string){
	a.requestId = s
}
func (s *{{.Name}}) SetIpAddress(s string){
	a.ipAddress = s
}
func (s *{{.Name}}) SetUserAgent(s string){
	a.userAgent = s
}
func (s *{{.Name}}) SetAcceptLanguage(s string)	{
	a.acceptLanguage = s
}
func (s *{{.Name}}) SetPath(s string){
	a.path = s
}
func (s *{{.Name}}) SetContext(c context.Context){
	a.context = c
}
