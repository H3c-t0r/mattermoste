package main

import (
	"flag"
	"fmt"
	"os"

	"github.com/mkraft/ifacemaker/maker"
)

func main() {
	tmplTxt := `// Copyright (c) 2016-present Mattermost, Inc. All Rights Reserved.
// See License.txt for license information.

`

	sourceFileName := os.Getenv("GOFILE")

	outFile := flag.String("out-file", fmt.Sprintf("../../mattermost-server/einterfaces/%s", sourceFileName), "target output file path")
	implementation := flag.String("implementation", "", "implementation struct")
	interfaceName := flag.String("interface", "", "name of interface struct to generate")
	pkgName := flag.String("package", "einterfaces", "name of package to generate")
	flag.Parse()

	b, err := maker.Make(
		[]string{sourceFileName},
		*implementation,
		"Code generated by enterprise/einterfaces_gen.go; DO NOT EDIT.",
		*pkgName,
		*interfaceName,
		"",
		true,
		true,
	)
	if err != nil {
		panic(err)
	}

	outputFile, err := os.Create(*outFile)
	if err != nil {
		panic(err)
	}
	defer outputFile.Close()

	tmplTxt = tmplTxt + string(b)

	fmt.Fprintf(outputFile, tmplTxt)
}
